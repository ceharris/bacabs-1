version: '3.2'

services:
  redis:
    image: redis:3.0
    command: redis-server --appendonly yes
    networks:
      - qa-backend
    volumes:
      - redis_data:/data

  traefik:
    image: traefik
    command: --web --docker --logLevel=DEBUG
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - qa-frontend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml

  dashboard:
    build:
      context: ./dashboard/
      dockerfile: Dockerfile-dev
    ports:
      - 3000:3000
    volumes:
      - ./dashboard:/app
      - ./shared:/shared
    networks:
      - qa-frontend
      - qa-backend
    labels:
      - "traefik.backend=bacabs"
      - "traefik.docker.network=qa-frontend"
      - "traefik.frontend.rule=Host:bacabs.docker.localhost"
      - "traefik.port=3000"

  docker:
    build:
      context: ./docker-event-watcher/
      dockerfile: Dockerfile-dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker-event-watcher:/app
      - ./shared:/shared
    networks:
      - qa-backend

  gitlab:
    build:
      context: ./gitlab-webhook-receiver/
      dockerfile: Dockerfile-dev
    volumes:
      - ./gitlab-webhook-receiver:/app
      - ./shared:/shared
    networks:
      - qa-frontend
      - qa-backend
    labels:
      - "traefik.backend=gitlab"
      - "traefik.docker.network=qa-frontend"
      - "traefik.frontend.rule=Host:gitlab.docker.localhost"
      - "traefik.port=80"

volumes:
  shared:
    driver: local
#    - ./shared:/shared

  redis_data:
    driver: local
    #    - /data

networks:
  qa-frontend:
    external: true
  qa-backend:
    driver: overlay
